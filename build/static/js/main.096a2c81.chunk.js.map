{"version":3,"sources":["domain/port/entities/exchange.port.ts","adapters/repositories/base-repository.ts","domain/entities/candle.ts","adapters/store/candle.ts","adapters/mappers/candle.mapper.ts","adapters/repositories/candle.ts","domain/entities/exchange.ts","adapters/store/index.ts","adapters/store/positions.ts","adapters/views/components/charts/candle-chart/utils/candle-stick-options.ts","adapters/views/components/charts/candle-chart/utils/candle-stick.mapper.ts","adapters/views/components/charts/candle-chart/index.tsx","adapters/views/components/charts/candle-chart/utils/chart-options.ts","domain/entities/order.ts","adapters/mappers/position.mapper.ts","adapters/views/components/commons/json-reader.component.tsx","adapters/views/components/commons/date-picker.component.tsx","adapters/views/components/positions/list.tsx","adapters/views/components/positions/results.tsx","adapters/views/pages/chart.page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ExchangePairList","BaseRepository","BASE_URL","process","BACKEND_URL","nearestFutureMinutes","interval","moment","roundedMinutes","Math","ceil","minute","clone","second","DeltaMap","date","delta","candleRepository","Candle","props","this","openAt","closeAt","open","close","high","low","volume","exchange","candles","length","sortedCandles","sort","a","b","getTime","startDate","startTime","toDate","myArray","chunk_size","index","arrayLength","tempArray","myChunk","slice","push","chunkArray","filter","candle","map","chunkedCandles","reduce","i","sum","fields","CandleMapper","toDomain","Date","CandleRepository","endDate","pair","axios","post","sDate","eDate","response","data","Exchange","name","Store","Object","freeze","create","set","loading","state","get","positions","candleStickOptions","upColor","downColor","wickUpColor","wickDownColor","borderVisible","borderColor","CandleStickMapper","toChart","time","CandleChart","chartRef","indicators","useRef","useState","currentInterval","setInt","withInterval","intervalCandles","setIntervalCandles","chart","setChart","series","setSeries","useEffect","ResizeSensor","document","querySelector","chartDOM","resize","clientWidth","clientHeight","width","height","current","removeSeries","currentSeries","addCandlestickSeries","setData","currentMakers","position","side","color","shape","text","setMarkers","createChart","rightPriceScale","scaleMargins","top","bottom","layout","backgroundColor","textColor","grid","vertLines","horzLines","timeScale","timeVisible","secondsVisible","className","onClick","id","ref","Order","quantity","price","PositionMapper","order","Upload","fileInput","setPositions","click","type","onChange","e","fileReader","FileReader","readAsText","target","files","onload","rawPositions","JSON","parse","result","href","rel","ResponsiveDateRangePicker","focus","setFocus","startDateId","endDateId","disabled","startDateAriaLabel","endDateAriaLabel","isOutsideRange","noBorder","onDatesChange","updateStartDate","updateEndDate","focusedInput","onFocusChange","regular","PositionList","style","maxHeight","minHeight","format","fee","profit","parseFloat","toFixed","PositionResults","pnl","end","duration","ChartPage","setStartDate","setEndDate","setPair","inputPairValue","setInputPairValue","setCandles","orders","getCandles","src","alt","Autocomplete","value","event","inputValue","onInputChange","options","renderInput","params","TextField","label","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRASaA,EAAmB,CAAC,WAAa,YAAc,gBAAkB,cAAgB,YAAc,WAAa,UAAY,UAAY,WAAa,eAAiB,UAAY,aAAe,WAAa,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,SAAW,SAAW,QAAU,QAAU,QAAU,WAAa,YAAc,SAAW,SAAW,SAAW,UAAY,UAAY,WAAa,UAAY,WAAa,UAAY,WAAa,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,WAAa,WAAa,YAAc,YAAc,WAAa,WAAa,YAAc,YAAc,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,WAAa,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,WAAa,aAAe,cAAgB,UAAY,WAAa,YAAc,YAAc,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,YAAc,aAAe,aAAe,UAAY,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,YAAc,aAAe,YAAc,aAAe,aAAe,aAAe,WAAa,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,WAAa,WAAa,YAAc,YAAc,YAAc,UAAY,YAAc,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,WAAa,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,WAAa,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,cAAgB,cAAgB,UAAY,UAAY,SAAW,SAAW,cAAgB,cAAgB,UAAY,SAAW,cAAgB,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,YAAc,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,cAAgB,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,WAAa,YAAc,YAAc,SAAW,UAAY,SAAW,YAAc,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,WAAa,YAAc,aAAe,aAAe,WAAa,WAAa,UAAY,WAAa,UAAY,WAAa,UAAY,UAAY,UAAY,WAAa,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,WAAa,UAAY,WAAa,SAAW,SAAW,UAAY,WAAa,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,WAAa,WAAa,YAAc,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,YAAc,WAAa,WAAa,YAAc,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,WAAa,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,WAAa,UAAY,WAAa,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,WAAa,WAAa,UAAY,SAAW,QAAU,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,UAAY,WAAa,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,YAAc,UAAY,UAAY,UAAY,WAAa,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,WAAa,UAAY,WAAa,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,cAAgB,cAAgB,SAAW,SAAW,cAAgB,cAAgB,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,cAAgB,cAAgB,UAAY,UAAY,SAAW,SAAW,cAAgB,cAAgB,UAAY,SAAW,cAAgB,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,QAAU,QAAU,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,cAAgB,YAAc,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,WAAa,YAAc,YAAc,WAAa,YAAc,WAAa,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,WAAa,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,QAAU,QAAU,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,WAAa,WAAa,QAAU,QAAU,SAAW,YAAc,WAAa,UAAY,UAAY,WAAa,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,WAAa,UAAY,WAAa,UAAY,UAAY,WAAa,UAAY,WAAa,UAAY,UAAY,WAAa,QAAU,SAAW,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,WAAa,UAAY,WAAa,UAAY,WAAa,UAAY,WAAa,WAAa,UAAY,WAAa,UAAY,UAAY,WAAa,eAAiB,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,aAAe,WAAa,WAAa,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,UAAY,WAAa,SAAW,SAAW,UAAY,WAAa,UAAY,WAAa,WAAa,WAAa,YAAc,WAAa,YAAc,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,UAAY,WAAa,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,WAAa,WAAa,WAAa,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,WAAa,SAAW,SAAW,SAAW,SAAW,SAAW,WAAa,WAAa,YAAc,YAAc,QAAU,SAAW,SAAW,UAAY,SAAW,QAAU,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,WAAa,WAAa,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,WAAa,UAAY,SAAW,UAAY,UAAY,YAAc,aAAe,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,WAAa,UAAY,WAAa,UAAY,WAAa,WAAa,SAAW,SAAW,SAAW,KAAO,SAAW,SAAW,SAAW,UAAY,WAAa,WAAa,SAAW,SAAW,YAAc,YAAc,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,QAAU,QAAU,QAAU,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,WAAa,WAAa,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,YAAc,UAAY,SAAW,SAAW,UAAY,UAAY,WAAa,WAAa,WAAa,UAAY,UAAY,UAAY,WAAa,WAAa,YAAc,WAAa,YAAc,WAAa,WAAa,WAAa,YAAc,UAAY,UAAY,WAAa,WAAa,WAAa,YAAc,WAAa,YAAc,WAAa,YAAc,WAAa,YAAc,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,WAAa,YAAc,YAAc,UAAY,UAAY,WAAa,WAAa,WAAa,YAAc,gBAAkB,cAAgB,YAAc,UAAY,WAAa,SAAW,UAAY,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,SAAW,YAAc,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,WAAa,WAAa,WAAa,YAAc,YAAc,YAAc,WAAa,WAAa,WAAa,WAAa,YAAc,UAAY,SAAW,UAAY,UAAY,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,WAAa,WAAa,WAAa,SAAW,SAAW,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAa,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,UAAY,UAAY,YAAc,WAAa,UAAY,WAAa,SAAW,UAAY,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,UAAY,cAAgB,SAAW,YAAc,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,YAAc,YAAc,UAAY,WAAa,WAAa,WAAa,WAAa,WAAa,UAAY,WAAa,UAAY,WAAa,UAAY,UAAY,UAAY,UAAY,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,UAAY,WAAa,UAAY,UAAY,WAAa,UAAY,WAAa,WAAa,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,WAAa,WAAa,YAAc,WAAa,WAAa,YAAc,YAAc,YAAc,UAAY,UAAY,SAAW,SAAW,SAAW,SAAW,UAAY,UAAY,WAAa,WAAa,WAAa,WAAa,SAAW,UAAY,UAAY,UAAY,UAAY,WAAa,WAAa,SAAW,SAAW,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,cAAgB,cAAgB,UAAY,SAAW,SAAW,SAAW,cAAgB,cAAgB,UAAY,cAAgB,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,SAAW,UAAY,YAAc,UAAY,UAAY,SAAW,SAAW,UAAY,cAAgB,YAAc,UAAY,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,SAAW,SAAW,SAAW,UAAY,cAAgB,SAAW,UAAY,UAAY,WAAa,WAAa,YAAc,UAAY,UAAY,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,SAAW,UAAY,UAAY,UAAY,SAAW,SAAW,SAAW,UAAY,UAAY,SAAW,SAAW,UAAY,SAAW,UAAY,SAAW,SAAW,UAAY,SAAW,W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","file":"static/js/main.096a2c81.chunk.js","sourcesContent":["import { Candle } from \"../../entities/candle\";\r\n\r\nexport interface ExchangeProps {\r\n  name: ExchangeName;\r\n}\r\n\r\nexport const ExchangeIntervalList = [\"12h\" , \"15m\" , \"1d\" , \"1h\" , \"1m\" , \"2h\" , \"30m\" , \"3m\" , \"4h\" , \"5m\" , \"6h\" , \"8h\"];\r\nexport type ExchangeInterval = typeof ExchangeIntervalList[number];\r\n\r\nexport const ExchangePairList = [\"1INCHBTC\" , \"1INCHBUSD\" , \"1INCHDOWNUSDT\" , \"1INCHUPUSDT\" , \"1INCHUSDT\" , \"AAVEBKRW\" , \"AAVEBNB\" , \"AAVEBTC\" , \"AAVEBUSD\" , \"AAVEDOWNUSDT\" , \"AAVEETH\" , \"AAVEUPUSDT\" , \"AAVEUSDT\" , \"ACMBTC\" , \"ACMBUSD\" , \"ACMUSDT\" , \"ADAAUD\" , \"ADABKRW\" , \"ADABNB\" , \"ADABRL\" , \"ADABTC\" , \"ADABUSD\" , \"ADADOWNUSDT\" , \"ADAETH\" , \"ADAEUR\" , \"ADAGBP\" , \"ADAPAX\" , \"ADARUB\" , \"ADATRY\" , \"ADATUSD\" , \"ADAUPUSDT\" , \"ADAUSDC\" , \"ADAUSDT\" , \"ADXBNB\" , \"ADXBTC\" , \"ADXETH\" , \"AEBNB\" , \"AEBTC\" , \"AEETH\" , \"AERGOBTC\" , \"AERGOBUSD\" , \"AGIBNB\" , \"AGIBTC\" , \"AGIETH\" , \"AIONBNB\" , \"AIONBTC\" , \"AIONBUSD\" , \"AIONETH\" , \"AIONUSDT\" , \"AKROBTC\" , \"AKROUSDT\" , \"ALGOBNB\" , \"ALGOBTC\" , \"ALGOBUSD\" , \"ALGOPAX\" , \"ALGOTUSD\" , \"ALGOUSDC\" , \"ALGOUSDT\" , \"ALICEBTC\" , \"ALICEBUSD\" , \"ALICEUSDT\" , \"ALPHABNB\" , \"ALPHABTC\" , \"ALPHABUSD\" , \"ALPHAUSDT\" , \"AMBBNB\" , \"AMBBTC\" , \"AMBETH\" , \"ANKRBNB\" , \"ANKRBTC\" , \"ANKRPAX\" , \"ANKRTUSD\" , \"ANKRUSDC\" , \"ANKRUSDT\" , \"ANTBNB\" , \"ANTBTC\" , \"ANTBUSD\" , \"ANTUSDT\" , \"APPCBNB\" , \"APPCBTC\" , \"APPCETH\" , \"ARDRBNB\" , \"ARDRBTC\" , \"ARDRETH\" , \"ARDRUSDT\" , \"ARKBTC\" , \"ARKETH\" , \"ARNBTC\" , \"ARNETH\" , \"ARPABNB\" , \"ARPABTC\" , \"ARPAUSDT\" , \"ASRBTC\" , \"ASRUSDT\" , \"ASTBTC\" , \"ASTETH\" , \"ATMBTC\" , \"ATMUSDT\" , \"ATOMBNB\" , \"ATOMBTC\" , \"ATOMBUSD\" , \"ATOMPAX\" , \"ATOMTUSD\" , \"ATOMUSDC\" , \"ATOMUSDT\" , \"AUCTIONBTC\" , \"AUCTIONBUSD\" , \"AUDBUSD\" , \"AUDIOBTC\" , \"AUDIOBUSD\" , \"AUDIOUSDT\" , \"AUDUSDT\" , \"AUTOBTC\" , \"AUTOBUSD\" , \"AUTOUSDT\" , \"AVABNB\" , \"AVABTC\" , \"AVABUSD\" , \"AVAUSDT\" , \"AVAXBNB\" , \"AVAXBTC\" , \"AVAXBUSD\" , \"AVAXEUR\" , \"AVAXTRY\" , \"AVAXUSDT\" , \"AXSBNB\" , \"AXSBTC\" , \"AXSBUSD\" , \"AXSUSDT\" , \"BADGERBTC\" , \"BADGERBUSD\" , \"BADGERUSDT\" , \"BAKEBNB\" , \"BAKEBUSD\" , \"BAKEUSDT\" , \"BALBNB\" , \"BALBTC\" , \"BALBUSD\" , \"BALUSDT\" , \"BANDBNB\" , \"BANDBTC\" , \"BANDBUSD\" , \"BANDUSDT\" , \"BARBTC\" , \"BARBUSD\" , \"BARUSDT\" , \"BATBNB\" , \"BATBTC\" , \"BATBUSD\" , \"BATETH\" , \"BATPAX\" , \"BATTUSD\" , \"BATUSDC\" , \"BATUSDT\" , \"BCCBNB\" , \"BCCBTC\" , \"BCCETH\" , \"BCCUSDT\" , \"BCDBTC\" , \"BCDETH\" , \"BCHABCBTC\" , \"BCHABCBUSD\" , \"BCHABCPAX\" , \"BCHABCTUSD\" , \"BCHABCUSDC\" , \"BCHABCUSDT\" , \"BCHABUSD\" , \"BCHBNB\" , \"BCHBTC\" , \"BCHBUSD\" , \"BCHDOWNUSDT\" , \"BCHEUR\" , \"BCHPAX\" , \"BCHSVBTC\" , \"BCHSVPAX\" , \"BCHSVTUSD\" , \"BCHSVUSDC\" , \"BCHSVUSDT\" , \"BCHTUSD\" , \"BCHUPUSDT\" , \"BCHUSDC\" , \"BCHUSDT\" , \"BCNBNB\" , \"BCNBTC\" , \"BCNETH\" , \"BCPTBNB\" , \"BCPTBTC\" , \"BCPTETH\" , \"BCPTPAX\" , \"BCPTTUSD\" , \"BCPTUSDC\" , \"BEAMBNB\" , \"BEAMBTC\" , \"BEAMUSDT\" , \"BEARBUSD\" , \"BEARUSDT\" , \"BELBNB\" , \"BELBTC\" , \"BELBUSD\" , \"BELUSDT\" , \"BETHETH\" , \"BGBPUSDC\" , \"BIFIBNB\" , \"BIFIBUSD\" , \"BKRWBUSD\" , \"BKRWUSDT\" , \"BLZBNB\" , \"BLZBTC\" , \"BLZBUSD\" , \"BLZETH\" , \"BLZUSDT\" , \"BNBAUD\" , \"BNBBEARBUSD\" , \"BNBBEARUSDT\" , \"BNBBIDR\" , \"BNBBKRW\" , \"BNBBRL\" , \"BNBBTC\" , \"BNBBULLBUSD\" , \"BNBBULLUSDT\" , \"BNBBUSD\" , \"BNBDAI\" , \"BNBDOWNUSDT\" , \"BNBETH\" , \"BNBEUR\" , \"BNBGBP\" , \"BNBIDRT\" , \"BNBNGN\" , \"BNBPAX\" , \"BNBRUB\" , \"BNBTRY\" , \"BNBTUSD\" , \"BNBUAH\" , \"BNBUPUSDT\" , \"BNBUSDC\" , \"BNBUSDS\" , \"BNBUSDT\" , \"BNBZAR\" , \"BNTBTC\" , \"BNTBUSD\" , \"BNTETH\" , \"BNTUSDT\" , \"BOTBTC\" , \"BOTBUSD\" , \"BQXBTC\" , \"BQXETH\" , \"BRDBNB\" , \"BRDBTC\" , \"BRDETH\" , \"BTCAUD\" , \"BTCBBTC\" , \"BTCBIDR\" , \"BTCBKRW\" , \"BTCBRL\" , \"BTCBUSD\" , \"BTCDAI\" , \"BTCDOWNUSDT\" , \"BTCEUR\" , \"BTCGBP\" , \"BTCIDRT\" , \"BTCNGN\" , \"BTCPAX\" , \"BTCRUB\" , \"BTCSTBTC\" , \"BTCSTBUSD\" , \"BTCSTUSDT\" , \"BTCTRY\" , \"BTCTUSD\" , \"BTCUAH\" , \"BTCUPUSDT\" , \"BTCUSDC\" , \"BTCUSDS\" , \"BTCUSDT\" , \"BTCVAI\" , \"BTCZAR\" , \"BTGBTC\" , \"BTGBUSD\" , \"BTGETH\" , \"BTGUSDT\" , \"BTSBNB\" , \"BTSBTC\" , \"BTSBUSD\" , \"BTSETH\" , \"BTSUSDT\" , \"BTTBNB\" , \"BTTBRL\" , \"BTTBTC\" , \"BTTBUSD\" , \"BTTEUR\" , \"BTTPAX\" , \"BTTTRX\" , \"BTTTRY\" , \"BTTTUSD\" , \"BTTUSDC\" , \"BTTUSDT\" , \"BULLBUSD\" , \"BULLUSDT\" , \"BURGERBNB\" , \"BURGERBUSD\" , \"BURGERUSDT\" , \"BUSDBIDR\" , \"BUSDBKRW\" , \"BUSDBRL\" , \"BUSDBVND\" , \"BUSDDAI\" , \"BUSDIDRT\" , \"BUSDNGN\" , \"BUSDRUB\" , \"BUSDTRY\" , \"BUSDUSDT\" , \"BUSDVAI\" , \"BUSDZAR\" , \"BZRXBNB\" , \"BZRXBTC\" , \"BZRXBUSD\" , \"BZRXUSDT\" , \"CAKEBNB\" , \"CAKEBTC\" , \"CAKEBUSD\" , \"CAKEGBP\" , \"CAKEUSDT\" , \"CDTBTC\" , \"CDTETH\" , \"CELOBTC\" , \"CELOUSDT\" , \"CELRBNB\" , \"CELRBTC\" , \"CELRUSDT\" , \"CFXBTC\" , \"CFXBUSD\" , \"CFXUSDT\" , \"CHATBTC\" , \"CHATETH\" , \"CHRBNB\" , \"CHRBTC\" , \"CHRUSDT\" , \"CHZBNB\" , \"CHZBRL\" , \"CHZBTC\" , \"CHZBUSD\" , \"CHZEUR\" , \"CHZGBP\" , \"CHZTRY\" , \"CHZUSDT\" , \"CKBBTC\" , \"CKBBUSD\" , \"CKBUSDT\" , \"CLOAKBTC\" , \"CLOAKETH\" , \"CMTBNB\" , \"CMTBTC\" , \"CMTETH\" , \"CNDBNB\" , \"CNDBTC\" , \"CNDETH\" , \"COCOSBNB\" , \"COCOSBTC\" , \"COCOSUSDT\" , \"COMPBNB\" , \"COMPBTC\" , \"COMPBUSD\" , \"COMPUSDT\" , \"COSBNB\" , \"COSBTC\" , \"COSUSDT\" , \"COTIBNB\" , \"COTIBTC\" , \"COTIUSDT\" , \"COVERBUSD\" , \"COVERETH\" , \"CREAMBNB\" , \"CREAMBUSD\" , \"CRVBNB\" , \"CRVBTC\" , \"CRVBUSD\" , \"CRVUSDT\" , \"CTKBNB\" , \"CTKBTC\" , \"CTKBUSD\" , \"CTKUSDT\" , \"CTSIBNB\" , \"CTSIBTC\" , \"CTSIBUSD\" , \"CTSIUSDT\" , \"CTXCBNB\" , \"CTXCBTC\" , \"CTXCUSDT\" , \"CVCBNB\" , \"CVCBTC\" , \"CVCETH\" , \"CVCUSDT\" , \"CVPBUSD\" , \"CVPETH\" , \"DAIBNB\" , \"DAIBTC\" , \"DAIBUSD\" , \"DAIUSDT\" , \"DASHBNB\" , \"DASHBTC\" , \"DASHBUSD\" , \"DASHETH\" , \"DASHUSDT\" , \"DATABTC\" , \"DATABUSD\" , \"DATAETH\" , \"DATAUSDT\" , \"DCRBNB\" , \"DCRBTC\" , \"DCRBUSD\" , \"DCRUSDT\" , \"DEGOBTC\" , \"DEGOBUSD\" , \"DEGOUSDT\" , \"DENTBTC\" , \"DENTETH\" , \"DENTUSDT\" , \"DEXEBUSD\" , \"DEXEETH\" , \"DFBUSD\" , \"DFETH\" , \"DGBBNB\" , \"DGBBTC\" , \"DGBBUSD\" , \"DGBUSDT\" , \"DGDBTC\" , \"DGDETH\" , \"DIABNB\" , \"DIABTC\" , \"DIABUSD\" , \"DIAUSDT\" , \"DLTBNB\" , \"DLTBTC\" , \"DLTETH\" , \"DNTBTC\" , \"DNTBUSD\" , \"DNTETH\" , \"DNTUSDT\" , \"DOCKBTC\" , \"DOCKETH\" , \"DOCKUSDT\" , \"DODOBTC\" , \"DODOBUSD\" , \"DODOUSDT\" , \"DOGEAUD\" , \"DOGEBNB\" , \"DOGEBRL\" , \"DOGEBTC\" , \"DOGEBUSD\" , \"DOGEEUR\" , \"DOGEGBP\" , \"DOGEPAX\" , \"DOGERUB\" , \"DOGETRY\" , \"DOGEUSDC\" , \"DOGEUSDT\" , \"DOTBIDR\" , \"DOTBKRW\" , \"DOTBNB\" , \"DOTBRL\" , \"DOTBTC\" , \"DOTBUSD\" , \"DOTDOWNUSDT\" , \"DOTEUR\" , \"DOTGBP\" , \"DOTNGN\" , \"DOTTRY\" , \"DOTUPUSDT\" , \"DOTUSDT\" , \"DREPBNB\" , \"DREPBTC\" , \"DREPUSDT\" , \"DUSKBNB\" , \"DUSKBTC\" , \"DUSKPAX\" , \"DUSKUSDC\" , \"DUSKUSDT\" , \"EASYBTC\" , \"EASYETH\" , \"EDOBTC\" , \"EDOETH\" , \"EGLDBNB\" , \"EGLDBTC\" , \"EGLDBUSD\" , \"EGLDEUR\" , \"EGLDUSDT\" , \"ELFBTC\" , \"ELFETH\" , \"ENGBTC\" , \"ENGETH\" , \"ENJBNB\" , \"ENJBRL\" , \"ENJBTC\" , \"ENJBUSD\" , \"ENJETH\" , \"ENJEUR\" , \"ENJGBP\" , \"ENJUSDT\" , \"EOSBEARBUSD\" , \"EOSBEARUSDT\" , \"EOSBNB\" , \"EOSBTC\" , \"EOSBULLBUSD\" , \"EOSBULLUSDT\" , \"EOSBUSD\" , \"EOSDOWNUSDT\" , \"EOSETH\" , \"EOSEUR\" , \"EOSPAX\" , \"EOSTRY\" , \"EOSTUSD\" , \"EOSUPUSDT\" , \"EOSUSDC\" , \"EOSUSDT\" , \"EPSBTC\" , \"EPSBUSD\" , \"EPSUSDT\" , \"ERDBNB\" , \"ERDBTC\" , \"ERDBUSD\" , \"ERDPAX\" , \"ERDUSDC\" , \"ERDUSDT\" , \"ETCBNB\" , \"ETCBTC\" , \"ETCBUSD\" , \"ETCETH\" , \"ETCPAX\" , \"ETCTUSD\" , \"ETCUSDC\" , \"ETCUSDT\" , \"ETHAUD\" , \"ETHBEARBUSD\" , \"ETHBEARUSDT\" , \"ETHBIDR\" , \"ETHBKRW\" , \"ETHBRL\" , \"ETHBTC\" , \"ETHBULLBUSD\" , \"ETHBULLUSDT\" , \"ETHBUSD\" , \"ETHDAI\" , \"ETHDOWNUSDT\" , \"ETHEUR\" , \"ETHGBP\" , \"ETHNGN\" , \"ETHPAX\" , \"ETHRUB\" , \"ETHTRY\" , \"ETHTUSD\" , \"ETHUPUSDT\" , \"ETHUSDC\" , \"ETHUSDT\" , \"ETHZAR\" , \"EURBUSD\" , \"EURUSDT\" , \"EVXBTC\" , \"EVXETH\" , \"EZBTC\" , \"EZETH\" , \"FETBNB\" , \"FETBTC\" , \"FETUSDT\" , \"FILBNB\" , \"FILBTC\" , \"FILBUSD\" , \"FILDOWNUSDT\" , \"FILUPUSDT\" , \"FILUSDT\" , \"FIOBNB\" , \"FIOBTC\" , \"FIOBUSD\" , \"FIOUSDT\" , \"FIROBTC\" , \"FIROETH\" , \"FIROUSDT\" , \"FISBTC\" , \"FISBUSD\" , \"FISUSDT\" , \"FLMBNB\" , \"FLMBTC\" , \"FLMBUSD\" , \"FLMUSDT\" , \"FORBTC\" , \"FORBUSD\" , \"FORTHBTC\" , \"FORTHBUSD\" , \"FORTHUSDT\" , \"FRONTBTC\" , \"FRONTBUSD\" , \"FRONTETH\" , \"FTMBNB\" , \"FTMBTC\" , \"FTMPAX\" , \"FTMTUSD\" , \"FTMUSDC\" , \"FTMUSDT\" , \"FTTBNB\" , \"FTTBTC\" , \"FTTUSDT\" , \"FUELBTC\" , \"FUELETH\" , \"FUNBTC\" , \"FUNETH\" , \"FUNUSDT\" , \"FXSBTC\" , \"FXSBUSD\" , \"GASBTC\" , \"GBPBUSD\" , \"GBPUSDT\" , \"GHSTBUSD\" , \"GHSTETH\" , \"GLMBTC\" , \"GLMETH\" , \"GNTBNB\" , \"GNTBTC\" , \"GNTETH\" , \"GOBNB\" , \"GOBTC\" , \"GRSBTC\" , \"GRSETH\" , \"GRTBTC\" , \"GRTBUSD\" , \"GRTETH\" , \"GRTEUR\" , \"GRTUSDT\" , \"GTOBNB\" , \"GTOBTC\" , \"GTOETH\" , \"GTOPAX\" , \"GTOTUSD\" , \"GTOUSDC\" , \"GTOUSDT\" , \"GVTBTC\" , \"GVTETH\" , \"GXSBTC\" , \"GXSETH\" , \"GXSUSDT\" , \"HARDBNB\" , \"HARDBTC\" , \"HARDBUSD\" , \"HARDUSDT\" , \"HBARBNB\" , \"HBARBTC\" , \"HBARBUSD\" , \"HBARUSDT\" , \"HCBTC\" , \"HCETH\" , \"HCUSDT\" , \"HEGICBUSD\" , \"HEGICETH\" , \"HIVEBNB\" , \"HIVEBTC\" , \"HIVEUSDT\" , \"HNTBTC\" , \"HNTUSDT\" , \"HOTBNB\" , \"HOTBRL\" , \"HOTBTC\" , \"HOTBUSD\" , \"HOTETH\" , \"HOTEUR\" , \"HOTTRY\" , \"HOTUSDT\" , \"HSRBTC\" , \"HSRETH\" , \"ICNBTC\" , \"ICNETH\" , \"ICXBNB\" , \"ICXBTC\" , \"ICXBUSD\" , \"ICXETH\" , \"ICXUSDT\" , \"IDEXBTC\" , \"IDEXBUSD\" , \"INJBNB\" , \"INJBTC\" , \"INJBUSD\" , \"INJUSDT\" , \"INSBTC\" , \"INSETH\" , \"IOSTBNB\" , \"IOSTBTC\" , \"IOSTBUSD\" , \"IOSTETH\" , \"IOSTUSDT\" , \"IOTABNB\" , \"IOTABTC\" , \"IOTABUSD\" , \"IOTAETH\" , \"IOTAUSDT\" , \"IOTXBTC\" , \"IOTXETH\" , \"IOTXUSDT\" , \"IQBNB\" , \"IQBUSD\" , \"IRISBNB\" , \"IRISBTC\" , \"IRISBUSD\" , \"IRISUSDT\" , \"JSTBNB\" , \"JSTBTC\" , \"JSTBUSD\" , \"JSTUSDT\" , \"JUVBTC\" , \"JUVBUSD\" , \"JUVUSDT\" , \"KAVABNB\" , \"KAVABTC\" , \"KAVAUSDT\" , \"KEYBTC\" , \"KEYETH\" , \"KEYUSDT\" , \"KMDBTC\" , \"KMDBUSD\" , \"KMDETH\" , \"KMDUSDT\" , \"KNCBTC\" , \"KNCBUSD\" , \"KNCETH\" , \"KNCUSDT\" , \"KP3RBNB\" , \"KP3RBUSD\" , \"KSMBNB\" , \"KSMBTC\" , \"KSMBUSD\" , \"KSMUSDT\" , \"LENDBKRW\" , \"LENDBTC\" , \"LENDBUSD\" , \"LENDETH\" , \"LENDUSDT\" , \"LINABTC\" , \"LINABUSD\" , \"LINAUSDT\" , \"LINKAUD\" , \"LINKBKRW\" , \"LINKBRL\" , \"LINKBTC\" , \"LINKBUSD\" , \"LINKDOWNUSDT\" , \"LINKETH\" , \"LINKEUR\" , \"LINKGBP\" , \"LINKNGN\" , \"LINKPAX\" , \"LINKTRY\" , \"LINKTUSD\" , \"LINKUPUSDT\" , \"LINKUSDC\" , \"LINKUSDT\" , \"LITBTC\" , \"LITBUSD\" , \"LITUSDT\" , \"LOOMBNB\" , \"LOOMBTC\" , \"LOOMETH\" , \"LRCBTC\" , \"LRCBUSD\" , \"LRCETH\" , \"LRCUSDT\" , \"LSKBNB\" , \"LSKBTC\" , \"LSKETH\" , \"LSKUSDT\" , \"LTCBNB\" , \"LTCBRL\" , \"LTCBTC\" , \"LTCBUSD\" , \"LTCDOWNUSDT\" , \"LTCETH\" , \"LTCEUR\" , \"LTCGBP\" , \"LTCNGN\" , \"LTCPAX\" , \"LTCRUB\" , \"LTCTUSD\" , \"LTCUPUSDT\" , \"LTCUSDC\" , \"LTCUSDT\" , \"LTOBNB\" , \"LTOBTC\" , \"LTOUSDT\" , \"LUNABNB\" , \"LUNABTC\" , \"LUNABUSD\" , \"LUNAEUR\" , \"LUNAUSDT\" , \"LUNBTC\" , \"LUNETH\" , \"MANABTC\" , \"MANABUSD\" , \"MANAETH\" , \"MANAUSDT\" , \"MATICBNB\" , \"MATICBTC\" , \"MATICBUSD\" , \"MATICEUR\" , \"MATICUSDT\" , \"MBLBNB\" , \"MBLBTC\" , \"MBLUSDT\" , \"MCOBNB\" , \"MCOBTC\" , \"MCOETH\" , \"MCOUSDT\" , \"MDABTC\" , \"MDAETH\" , \"MDTBNB\" , \"MDTBTC\" , \"MDTUSDT\" , \"MFTBNB\" , \"MFTBTC\" , \"MFTETH\" , \"MFTUSDT\" , \"MIRBTC\" , \"MIRBUSD\" , \"MIRUSDT\" , \"MITHBNB\" , \"MITHBTC\" , \"MITHUSDT\" , \"MKRBNB\" , \"MKRBTC\" , \"MKRBUSD\" , \"MKRUSDT\" , \"MODBTC\" , \"MODETH\" , \"MTHBTC\" , \"MTHETH\" , \"MTLBTC\" , \"MTLETH\" , \"MTLUSDT\" , \"NANOBNB\" , \"NANOBTC\" , \"NANOBUSD\" , \"NANOETH\" , \"NANOUSDT\" , \"NASBNB\" , \"NASBTC\" , \"NASETH\" , \"NAVBNB\" , \"NAVBTC\" , \"NAVETH\" , \"NBSBTC\" , \"NBSUSDT\" , \"NCASHBNB\" , \"NCASHBTC\" , \"NCASHETH\" , \"NEARBNB\" , \"NEARBTC\" , \"NEARBUSD\" , \"NEARUSDT\" , \"NEBLBNB\" , \"NEBLBTC\" , \"NEBLETH\" , \"NEOBNB\" , \"NEOBTC\" , \"NEOBUSD\" , \"NEOETH\" , \"NEOPAX\" , \"NEOTRY\" , \"NEOTUSD\" , \"NEOUSDC\" , \"NEOUSDT\" , \"NKNBNB\" , \"NKNBTC\" , \"NKNUSDT\" , \"NMRBNB\" , \"NMRBTC\" , \"NMRBUSD\" , \"NMRUSDT\" , \"NPXSBTC\" , \"NPXSETH\" , \"NPXSUSDC\" , \"NPXSUSDT\" , \"NULSBNB\" , \"NULSBTC\" , \"NULSETH\" , \"NULSUSDT\" , \"NXSBNB\" , \"NXSBTC\" , \"NXSETH\" , \"OAXBTC\" , \"OAXETH\" , \"OCEANBNB\" , \"OCEANBTC\" , \"OCEANBUSD\" , \"OCEANUSDT\" , \"OGBTC\" , \"OGNBNB\" , \"OGNBTC\" , \"OGNUSDT\" , \"OGUSDT\" , \"OMBTC\" , \"OMBUSD\" , \"OMGBNB\" , \"OMGBTC\" , \"OMGBUSD\" , \"OMGETH\" , \"OMGUSDT\" , \"OMUSDT\" , \"ONEBIDR\" , \"ONEBNB\" , \"ONEBTC\" , \"ONEBUSD\" , \"ONEPAX\" , \"ONETUSD\" , \"ONEUSDC\" , \"ONEUSDT\" , \"ONGBNB\" , \"ONGBTC\" , \"ONGUSDT\" , \"ONTBNB\" , \"ONTBTC\" , \"ONTBUSD\" , \"ONTETH\" , \"ONTPAX\" , \"ONTTRY\" , \"ONTUSDC\" , \"ONTUSDT\" , \"ORNBTC\" , \"ORNUSDT\" , \"OSTBNB\" , \"OSTBTC\" , \"OSTETH\" , \"OXTBTC\" , \"OXTUSDT\" , \"PAXBNB\" , \"PAXBTC\" , \"PAXBUSD\" , \"PAXETH\" , \"PAXGBNB\" , \"PAXGBTC\" , \"PAXGBUSD\" , \"PAXGUSDT\" , \"PAXTUSD\" , \"PAXUSDT\" , \"PERLBNB\" , \"PERLBTC\" , \"PERLUSDC\" , \"PERLUSDT\" , \"PERPBTC\" , \"PERPBUSD\" , \"PERPUSDT\" , \"PHABTC\" , \"PHABUSD\" , \"PHBBNB\" , \"PHBBTC\" , \"PHBPAX\" , \"PHBTUSD\" , \"PHBUSDC\" , \"PHXBNB\" , \"PHXBTC\" , \"PHXETH\" , \"PIVXBNB\" , \"PIVXBTC\" , \"PIVXETH\" , \"PNTBTC\" , \"PNTUSDT\" , \"POABNB\" , \"POABTC\" , \"POAETH\" , \"POEBTC\" , \"POEETH\" , \"POLYBNB\" , \"POLYBTC\" , \"PONDBTC\" , \"PONDBUSD\" , \"PONDUSDT\" , \"POWRBNB\" , \"POWRBTC\" , \"POWRETH\" , \"PPTBTC\" , \"PPTETH\" , \"PROMBNB\" , \"PROMBUSD\" , \"PROSETH\" , \"PSGBTC\" , \"PSGBUSD\" , \"PSGUSDT\" , \"PUNDIXETH\" , \"PUNDIXUSDT\" , \"QKCBTC\" , \"QKCETH\" , \"QLCBNB\" , \"QLCBTC\" , \"QLCETH\" , \"QSPBNB\" , \"QSPBTC\" , \"QSPETH\" , \"QTUMBNB\" , \"QTUMBTC\" , \"QTUMBUSD\" , \"QTUMETH\" , \"QTUMUSDT\" , \"RAMPBTC\" , \"RAMPBUSD\" , \"RAMPUSDT\" , \"RCNBNB\" , \"RCNBTC\" , \"RCNETH\" , \"..\" , \"RDNBNB\" , \"RDNBTC\" , \"RDNETH\" , \"REEFBTC\" , \"REEFBUSD\" , \"REEFUSDT\" , \"RENBNB\" , \"RENBTC\" , \"RENBTCBTC\" , \"RENBTCETH\" , \"RENUSDT\" , \"REPBNB\" , \"REPBTC\" , \"REPBUSD\" , \"REPETH\" , \"REPUSDT\" , \"REQBTC\" , \"REQETH\" , \"RIFBTC\" , \"RIFUSDT\" , \"RLCBNB\" , \"RLCBTC\" , \"RLCETH\" , \"RLCUSDT\" , \"ROSEBTC\" , \"ROSEBUSD\" , \"ROSEUSDT\" , \"RPXBNB\" , \"RPXBTC\" , \"RPXETH\" , \"RSRBNB\" , \"RSRBTC\" , \"RSRBUSD\" , \"RSRUSDT\" , \"RUNEBNB\" , \"RUNEBTC\" , \"RUNEBUSD\" , \"RUNEUSDT\" , \"RVNBNB\" , \"RVNBTC\" , \"RVNBUSD\" , \"RVNTRY\" , \"RVNUSDT\" , \"SALTBTC\" , \"SALTETH\" , \"SANDBNB\" , \"SANDBTC\" , \"SANDBUSD\" , \"SANDUSDT\" , \"SCBNB\" , \"SCBTC\" , \"SCETH\" , \"SCRTBTC\" , \"SCRTETH\" , \"SCUSDT\" , \"SFPBTC\" , \"SFPBUSD\" , \"SFPUSDT\" , \"SKLBTC\" , \"SKLBUSD\" , \"SKLUSDT\" , \"SKYBNB\" , \"SKYBTC\" , \"SKYETH\" , \"SLPBUSD\" , \"SLPETH\" , \"SLPUSDT\" , \"SNGLSBTC\" , \"SNGLSETH\" , \"SNMBTC\" , \"SNMETH\" , \"SNTBTC\" , \"SNTETH\" , \"SNXBNB\" , \"SNXBTC\" , \"SNXBUSD\" , \"SNXUSDT\" , \"SOLBNB\" , \"SOLBTC\" , \"SOLBUSD\" , \"SOLUSDT\" , \"SPARTABNB\" , \"SRMBIDR\" , \"SRMBNB\" , \"SRMBTC\" , \"SRMBUSD\" , \"SRMUSDT\" , \"STEEMBNB\" , \"STEEMBTC\" , \"STEEMETH\" , \"STMXBNB\" , \"STMXBTC\" , \"STMXETH\" , \"STMXUSDT\" , \"STORJBTC\" , \"STORJBUSD\" , \"STORJETH\" , \"STORJUSDT\" , \"STORMBNB\" , \"STORMBTC\" , \"STORMETH\" , \"STORMUSDT\" , \"STPTBNB\" , \"STPTBTC\" , \"STPTUSDT\" , \"STRATBNB\" , \"STRATBTC\" , \"STRATBUSD\" , \"STRATETH\" , \"STRATUSDT\" , \"STRAXBTC\" , \"STRAXBUSD\" , \"STRAXETH\" , \"STRAXUSDT\" , \"STXBNB\" , \"STXBTC\" , \"STXUSDT\" , \"SUBBTC\" , \"SUBETH\" , \"SUNBTC\" , \"SUNUSDT\" , \"SUPERBTC\" , \"SUPERBUSD\" , \"SUPERUSDT\" , \"SUSDBTC\" , \"SUSDETH\" , \"SUSDUSDT\" , \"SUSHIBNB\" , \"SUSHIBTC\" , \"SUSHIBUSD\" , \"SUSHIDOWNUSDT\" , \"SUSHIUPUSDT\" , \"SUSHIUSDT\" , \"SWRVBNB\" , \"SWRVBUSD\" , \"SXPAUD\" , \"SXPBIDR\" , \"SXPBNB\" , \"SXPBTC\" , \"SXPBUSD\" , \"SXPDOWNUSDT\" , \"SXPEUR\" , \"SXPGBP\" , \"SXPTRY\" , \"SXPUPUSDT\" , \"SXPUSDT\" , \"SYSBNB\" , \"SYSBTC\" , \"SYSBUSD\" , \"SYSETH\" , \"TCTBNB\" , \"TCTBTC\" , \"TCTUSDT\" , \"TFUELBNB\" , \"TFUELBTC\" , \"TFUELPAX\" , \"TFUELTUSD\" , \"TFUELUSDC\" , \"TFUELUSDT\" , \"THETABNB\" , \"THETABTC\" , \"THETAETH\" , \"THETAEUR\" , \"THETAUSDT\" , \"TKOBIDR\" , \"TKOBTC\" , \"TKOBUSD\" , \"TKOUSDT\" , \"TLMBTC\" , \"TLMBUSD\" , \"TLMUSDT\" , \"TNBBTC\" , \"TNBETH\" , \"TNTBTC\" , \"TNTETH\" , \"TOMOBNB\" , \"TOMOBTC\" , \"TOMOBUSD\" , \"TOMOUSDC\" , \"TOMOUSDT\" , \"TRBBNB\" , \"TRBBTC\" , \"TRBBUSD\" , \"TRBUSDT\" , \"TRIGBNB\" , \"TRIGBTC\" , \"TRIGETH\" , \"TROYBNB\" , \"TROYBTC\" , \"TROYUSDT\" , \"TRUBTC\" , \"TRUBUSD\" , \"TRUUSDT\" , \"TRXAUD\" , \"TRXBNB\" , \"TRXBTC\" , \"TRXBUSD\" , \"TRXDOWNUSDT\" , \"TRXETH\" , \"TRXEUR\" , \"TRXNGN\" , \"TRXPAX\" , \"TRXTRY\" , \"TRXTUSD\" , \"TRXUPUSDT\" , \"TRXUSDC\" , \"TRXUSDT\" , \"TRXXRP\" , \"TUSDBNB\" , \"TUSDBTC\" , \"TUSDBTUSD\" , \"TUSDBUSD\" , \"TUSDETH\" , \"TUSDUSDT\" , \"TVKBTC\" , \"TVKBUSD\" , \"TWTBTC\" , \"TWTBUSD\" , \"TWTUSDT\" , \"UFTBUSD\" , \"UFTETH\" , \"UMABTC\" , \"UMAUSDT\" , \"UNFIBNB\" , \"UNFIBTC\" , \"UNFIBUSD\" , \"UNFIUSDT\" , \"UNIBNB\" , \"UNIBTC\" , \"UNIBUSD\" , \"UNIDOWNUSDT\" , \"UNIEUR\" , \"UNIUPUSDT\" , \"UNIUSDT\" , \"USDCBNB\" , \"USDCBUSD\" , \"USDCPAX\" , \"USDCTUSD\" , \"USDCUSDT\" , \"USDSBUSDS\" , \"USDSBUSDT\" , \"USDSPAX\" , \"USDSTUSD\" , \"USDSUSDC\" , \"USDSUSDT\" , \"USDTBIDR\" , \"USDTBKRW\" , \"USDTBRL\" , \"USDTBVND\" , \"USDTDAI\" , \"USDTIDRT\" , \"USDTNGN\" , \"USDTRUB\" , \"USDTTRY\" , \"USDTUAH\" , \"USDTZAR\" , \"UTKBTC\" , \"UTKUSDT\" , \"VENBNB\" , \"VENBTC\" , \"VENETH\" , \"VENUSDT\" , \"VETBNB\" , \"VETBTC\" , \"VETBUSD\" , \"VETETH\" , \"VETEUR\" , \"VETGBP\" , \"VETTRY\" , \"VETUSDT\" , \"VIABNB\" , \"VIABTC\" , \"VIAETH\" , \"VIBBTC\" , \"VIBEBTC\" , \"VIBEETH\" , \"VIBETH\" , \"VIDTBTC\" , \"VIDTBUSD\" , \"VITEBNB\" , \"VITEBTC\" , \"VITEUSDT\" , \"VTHOBNB\" , \"VTHOBUSD\" , \"VTHOUSDT\" , \"WABIBNB\" , \"WABIBTC\" , \"WABIETH\" , \"WANBNB\" , \"WANBTC\" , \"WANETH\" , \"WANUSDT\" , \"WAVESBNB\" , \"WAVESBTC\" , \"WAVESBUSD\" , \"WAVESETH\" , \"WAVESPAX\" , \"WAVESTUSD\" , \"WAVESUSDC\" , \"WAVESUSDT\" , \"WBTCBTC\" , \"WBTCETH\" , \"WINBNB\" , \"WINBRL\" , \"WINBTC\" , \"WINEUR\" , \"WINGBNB\" , \"WINGBTC\" , \"WINGBUSD\" , \"WINGSBTC\" , \"WINGSETH\" , \"WINGUSDT\" , \"WINTRX\" , \"WINUSDC\" , \"WINUSDT\" , \"WNXMBNB\" , \"WNXMBTC\" , \"WNXMBUSD\" , \"WNXMUSDT\" , \"WPRBTC\" , \"WPRETH\" , \"WRXBNB\" , \"WRXBTC\" , \"WRXBUSD\" , \"WRXEUR\" , \"WRXUSDT\" , \"WTCBNB\" , \"WTCBTC\" , \"WTCETH\" , \"WTCUSDT\" , \"XEMBNB\" , \"XEMBTC\" , \"XEMETH\" , \"XEMUSDT\" , \"XLMBNB\" , \"XLMBTC\" , \"XLMBUSD\" , \"XLMDOWNUSDT\" , \"XLMETH\" , \"XLMEUR\" , \"XLMPAX\" , \"XLMTRY\" , \"XLMTUSD\" , \"XLMUPUSDT\" , \"XLMUSDC\" , \"XLMUSDT\" , \"XMRBNB\" , \"XMRBTC\" , \"XMRBUSD\" , \"XMRETH\" , \"XMRUSDT\" , \"XRPAUD\" , \"XRPBEARBUSD\" , \"XRPBEARUSDT\" , \"XRPBKRW\" , \"XRPBNB\" , \"XRPBRL\" , \"XRPBTC\" , \"XRPBULLBUSD\" , \"XRPBULLUSDT\" , \"XRPBUSD\" , \"XRPDOWNUSDT\" , \"XRPETH\" , \"XRPEUR\" , \"XRPGBP\" , \"XRPNGN\" , \"XRPPAX\" , \"XRPRUB\" , \"XRPTRY\" , \"XRPTUSD\" , \"XRPUPUSDT\" , \"XRPUSDC\" , \"XRPUSDT\" , \"XTZBNB\" , \"XTZBTC\" , \"XTZBUSD\" , \"XTZDOWNUSDT\" , \"XTZUPUSDT\" , \"XTZUSDT\" , \"XVGBTC\" , \"XVGBUSD\" , \"XVGETH\" , \"XVSBNB\" , \"XVSBTC\" , \"XVSBUSD\" , \"XVSUSDT\" , \"XZCBNB\" , \"XZCBTC\" , \"XZCETH\" , \"XZCUSDT\" , \"XZCXRP\" , \"YFIBNB\" , \"YFIBTC\" , \"YFIBUSD\" , \"YFIDOWNUSDT\" , \"YFIEUR\" , \"YFIIBNB\" , \"YFIIBTC\" , \"YFIIBUSD\" , \"YFIIUSDT\" , \"YFIUPUSDT\" , \"YFIUSDT\" , \"YOYOBNB\" , \"YOYOBTC\" , \"YOYOETH\" , \"ZECBNB\" , \"ZECBTC\" , \"ZECBUSD\" , \"ZECETH\" , \"ZECPAX\" , \"ZECTUSD\" , \"ZECUSDC\" , \"ZECUSDT\" , \"ZENBNB\" , \"ZENBTC\" , \"ZENETH\" , \"ZENUSDT\" , \"ZILBIDR\" , \"ZILBNB\" , \"ZILBTC\" , \"ZILBUSD\" , \"ZILETH\" , \"ZILUSDT\" , \"ZRXBNB\" , \"ZRXBTC\" , \"ZRXBUSD\" , \"ZRXETH\" , \"ZRXUSDT\"];\r\nexport type ExchangeName = \"Binance\";\r\nexport type ExchangePair = typeof ExchangePairList[number];\r\n\r\nexport interface Exchange {\r\n  getCandles(sDate: Date, eDate: Date, pair: ExchangePair, interval: ExchangeInterval): Promise<Candle[]>;\r\n}","export class BaseRepository {\r\n  public BASE_URL = process.env.BACKEND_URL;\r\n}","import { CandleProps } from \"../port/entities/candle.port\";\r\nimport { ExchangeInterval } from \"../port/entities/exchange.port\";\r\nimport moment, {Moment} from \"moment\";\r\n\r\nfunction nearestFutureMinutes(interval: number, moment: Moment){\r\n  const roundedMinutes = Math.ceil(moment.minute() / interval) * interval;\r\n  return moment.clone().minute(roundedMinutes).second(0);\r\n}\r\n\r\nconst DeltaMap:any = {\r\n  \"1m\" : {\r\n    date : (date: Date):any => nearestFutureMinutes(1, moment(date)),\r\n    delta : 1\r\n  },\r\n  \"3m\" : {\r\n    date : (date: Date) => nearestFutureMinutes(3, moment(date)),\r\n    delta : 3\r\n  },\r\n  \"5m\" : {\r\n    date : (date: Date) => nearestFutureMinutes(5, moment(date)),\r\n    delta : 5\r\n  },\r\n  \"15m\" : {\r\n    date : (date: Date) => nearestFutureMinutes(15, moment(date)),\r\n    delta : 15\r\n  },\r\n  \"30m\" : {\r\n    date : (date: Date) => nearestFutureMinutes(30, moment(date)),\r\n    delta : 30\r\n  },\r\n  \"1h\" : {\r\n    date : (date: Date) => nearestFutureMinutes(60, moment(date)),\r\n    delta : 60\r\n  },\r\n  \"2h\" : {\r\n    date : (date: Date) => nearestFutureMinutes(120, moment(date)),\r\n    delta : 120\r\n  },\r\n  \"4h\" : {\r\n    date : (date: Date) => nearestFutureMinutes(60 * 4, moment(date)),\r\n    delta : 240\r\n  },\r\n  \"8h\" : {\r\n    date : (date: Date) => nearestFutureMinutes(60 * 8, moment(date)),\r\n    delta : 480\r\n  },\r\n  \"12h\" : {\r\n    date : (date: Date) => nearestFutureMinutes(60 * 12, moment(date)),\r\n    delta : 60 * 12\r\n  },\r\n  \"1d\" : {\r\n    date : (date: Date) => nearestFutureMinutes(60 * 24, moment(date)),\r\n    delta : 60 * 24\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an array with arrays of the given size.\r\n *\r\n * @param myArray {Array} array to split\r\n * @param chunk_size {Integer} Size of every group\r\n */\r\n function chunkArray(myArray:any[], chunk_size: number){\r\n  var index = 0;\r\n  var arrayLength = myArray.length;\r\n  var tempArray = [];\r\n  \r\n  for (index = 0; index < arrayLength; index += chunk_size) {\r\n      let myChunk = myArray.slice(index, index+chunk_size);\r\n      // Do something if you want with the group\r\n      tempArray.push(myChunk);\r\n  }\r\n\r\n  return tempArray;\r\n}\r\n\r\n\r\nexport class Candle {\r\n\r\n  constructor(private props: CandleProps) {}\r\n\r\n  get openAt() : Date { return this.props.openAt };\r\n  get closeAt() : Date { return this.props.closeAt };\r\n  get open() : number { return this.props.open };\r\n  get close() : number { return this.props.close };\r\n  get high() : number { return this.props.high };\r\n  get low() : number { return this.props.low };\r\n  get volume() : number { return this.props.volume };\r\n  get exchange() : string { return this.props.exchange };\r\n  get interval() : ExchangeInterval { return this.props.interval };\r\n  get fields() : CandleProps { return this.props };\r\n\r\n  public static withInterval(candles: Candle[], interval: ExchangeInterval){\r\n    if (interval === \"1m\" || !candles.length) return candles;\r\n    const sortedCandles = [...candles].sort((a, b) => b.openAt.getTime() - a.openAt.getTime());\r\n    const startDate: Moment = DeltaMap[interval].date(sortedCandles[0].openAt);\r\n    const delta: number = DeltaMap[interval].delta;\r\n    const startTime = startDate.toDate().getTime();\r\n\r\n    const filteredCandles = candles.filter(candle => candle.openAt.getTime() >= startTime / 1000);\r\n    const chunkedCandlesArray = chunkArray(filteredCandles, delta);\r\n    return chunkedCandlesArray.map((chunkedCandles: Candle[]) => {\r\n      const candle =  new Candle(chunkedCandles.reduce((props, candle, i) => {\r\n        const sum = {\r\n          ...props,\r\n          close : candle.close, volume : (candle?.volume || 0) + (props?.volume || 0),\r\n          high : candle.high > props.high ? candle.high : props.high,\r\n          low : candle.low < props.low ? candle.low : props.low,\r\n        };\r\n        return (i !== chunkedCandles.length -1) ? sum : { ...sum, volume : sum.volume / chunkedCandles.length }\r\n      }, chunkedCandles[0].fields))\r\n      return candle;\r\n    })\r\n  }\r\n}","import create from \"zustand\";\r\nimport { Exchange } from \"../../domain/entities/exchange\";\r\nimport { ExchangePair } from \"../../domain/port/entities/exchange.port\";\r\nimport { CandleStoreInterface } from \"../../domain/port/store/candle\";\r\nimport { CandleRepository } from \"../repositories/candle\";\r\n\r\nexport const CandleStore = (candleRepository: CandleRepository) => {\r\n  return create<CandleStoreInterface>(set => ({\r\n    candles : [],\r\n    loading : false,\r\n    set: async (startDate: Date, endDate: Date, pair: ExchangePair) => {\r\n      set(state => ({ ...state, loading : true }))\r\n      const candles = await candleRepository.get(new Exchange({ name: \"Binance\" }), startDate, endDate, pair)\r\n      set(state => ({ ...state, candles, loading : false }))\r\n    }\r\n  }))\r\n}\r\n","import { Candle } from \"../../domain/entities/candle\";\r\nimport { CandleProps } from \"../../domain/port/entities/candle.port\";\r\nimport { ExchangePair } from \"../../domain/port/entities/exchange.port\";\r\n\r\nconst CandleMapper = {\r\n  toDomain(candle: CandleProps) : Candle {\r\n    return new Candle({\r\n      openAt : new Date(candle.openAt),\r\n      closeAt : new Date(candle.closeAt),\r\n      open : candle.open,\r\n      close : candle.close,\r\n      high : candle.high,\r\n      low : candle.low,\r\n      volume : candle.volume,\r\n      exchange : candle.exchange,\r\n      interval:  candle.interval\r\n    })\r\n  }\r\n}\r\n\r\nexport default  CandleMapper;","import { Exchange } from \"../../domain/entities/exchange\";\r\nimport { ExchangePair } from \"../../domain/port/entities/exchange.port\";\r\nimport { CandleRepositoryInterface } from \"../../domain/port/repositories/candle\";\r\nimport { BaseRepository } from \"./base-repository\";\r\nimport axios from \"axios\";\r\nimport { Candle } from \"../../domain/entities/candle\";\r\nimport { CandleProps } from \"../../domain/port/entities/candle.port\";\r\nimport CandleMapper from \"../mappers/candle.mapper\";\r\n\r\nexport class CandleRepository extends BaseRepository implements CandleRepositoryInterface {\r\n  public async get(exchange: Exchange, startDate: Date, endDate: Date, pair: ExchangePair):Promise<Candle[]> {\r\n    const response = await axios.post<{candles: Candle[]}>('http://localhost:4242/candles', { sDate: startDate, eDate: endDate, pair })\r\n    return response.data.candles.map((candle: CandleProps) => CandleMapper.toDomain({...candle, exchange : \"binance\", interval: \"1m\"}))\r\n  }\r\n}","import { ExchangeName, ExchangeProps } from \"../port/entities/exchange.port\"\r\n\r\nexport class Exchange {\r\n  constructor(private props: ExchangeProps) {}\r\n\r\n  get name() : ExchangeName { return this.props.name };\r\n}","import { StoreInterface } from \"../../domain/port/store/store\";\r\nimport { CandleRepository } from \"../repositories/candle\";\r\nimport { CandleStore } from \"./candle\";\r\nimport { PositionStore } from \"./positions\";\r\n\r\nexport const Store:StoreInterface = Object.freeze({\r\n  candles: CandleStore(new CandleRepository()),\r\n  positions: PositionStore()\r\n})\r\n\r\n","import create from \"zustand\";\r\nimport { Position } from \"../../domain/port/entities/position.port\";\r\nimport { PositionStoreInterface } from \"../../domain/port/store/position\";\r\n\r\nexport const PositionStore = () => {\r\n  return create<PositionStoreInterface>(set => ({\r\n    positions : [],\r\n    loading : false,\r\n    set: async (positions: Position[]) => {\r\n      set(state => ({ ...state, positions }))\r\n    },\r\n  }))\r\n}\r\n","export const candleStickOptions = {\r\n  upColor: \"#eee\",\r\n  downColor: \"#20272F\",\r\n  wickUpColor: \"#ccc\",\r\n  wickDownColor: \"#20272F\",\r\n  borderVisible: true,\r\n  borderColor: '#ccc'\r\n}","import { UTCTimestamp } from \"lightweight-charts\";\r\nimport { Candle } from \"../../../../../../domain/entities/candle\";\r\nimport { CandleStick } from \"../entities/candlestick\";\r\n\r\nexport const CandleStickMapper = Object.freeze({\r\n  toChart(candles: Candle[]):CandleStick[] {\r\n    return candles.map((candle, i) =>   ({\r\n      time: candle.openAt.getTime() / 1000 as UTCTimestamp,\r\n      open: candle.open,\r\n      high: candle.high,\r\n      low: candle.low,\r\n      close: candle.close\r\n    }))\r\n  }\r\n})","import { createChart } from \"lightweight-charts\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport ResizeSensor from \"resize-sensor\";\r\nimport { Candle } from \"../../../../../domain/entities/candle\";\r\nimport { Indicator } from \"../../../../../domain/entities/indicator\";\r\nimport { ExchangeInterval } from \"../../../../../domain/port/entities/exchange.port\";\r\nimport { Position } from \"../../../../../domain/port/entities/position.port\";\r\nimport { buildChartOptions, CandleStickMapper, candleStickOptions } from \"./utils\";\r\n\r\ninterface CandleChartProps {\r\n  candles: Candle[];\r\n  positions: Position[];\r\n  indicators: Indicator[];\r\n}\r\n\r\n\r\nexport const CandleChart = ({ candles, positions, indicators}: CandleChartProps) => {\r\n  const chartRef = useRef<any>();\r\n  const [currentInterval, setInt] = useState(\"1m\");\r\n  const [intervalCandles, setIntervalCandles] = useState(Candle.withInterval(candles, currentInterval as ExchangeInterval))\r\n  const [chart, setChart] = useState<any>(null);\r\n  const [series, setSeries] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    setIntervalCandles(Candle.withInterval(candles, currentInterval as ExchangeInterval))\r\n  }, [candles, currentInterval])\r\n\r\n  useEffect(() => {\r\n    new ResizeSensor(document.querySelector('#chart-container'), () => {\r\n      const chartDOM = document.querySelector('#chart-container')  as HTMLElement;\r\n      if (chart && chartDOM) chart.resize(chartDOM.clientWidth - 40, chartDOM.clientHeight - 40)\r\n    })\r\n  }, [chart])\r\n\r\n  useEffect(() => {\r\n    if (!chartRef.current) return;\r\n    if (!chart) setChart(createChart(chartRef.current, buildChartOptions(chartRef.current.clientWidth, chartRef.current.clientHeight)));\r\n    else {\r\n      if (series) {\r\n        chart.removeSeries(series);\r\n      }\r\n      const currentSeries = chart.addCandlestickSeries(candleStickOptions);\r\n      currentSeries.setData(CandleStickMapper.toChart(intervalCandles));\r\n      setSeries(currentSeries);\r\n      const currentMakers = positions.reduce((positions:any, position) => {\r\n        positions.push({\r\n          time: position.state.openAt.getTime() / 1000,\r\n          position: position.side === \"ask\" ? \"belowBar\" : \"aboveBar\",\r\n          color:  position.side === \"ask\" ? \"#46e60b\" : \"black\",\r\n          shape: position.side === \"ask\" ? \"arrowUp\" : \"arrowDown\",\r\n          text: position.side === \"ask\" ? \"Buy\" : \"Sell\",\r\n        })\r\n        positions.push({\r\n          time: position.state.closeAt.getTime() / 1000,\r\n          position: position.side === \"bid\" ? \"belowBar\" : \"aboveBar\",\r\n          color: position.side === \"bid\" ? \"#46e60b\" : \"black\",\r\n          shape: position.side === \"bid\" ? \"arrowUp\" : \"arrowDown\",\r\n          text: position.side === \"bid\" ? \"Buy\" : \"Sell\",\r\n        })\r\n        return positions;\r\n      }, [])\r\n      currentSeries.setMarkers(currentMakers);\r\n    }\r\n    \r\n  }, [candles, chart, intervalCandles]);\r\n  \r\n  return (\r\n    <div className=\"w-full h-full flex flex-col items-center justify-between\">\r\n      <div className=\"text-white font-bold bg-black-primary px-6 py-2 w-full text-sm uppercase flex justify-between\">\r\n      {[\"1m\", \"3m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"4h\", \"8h\", \"12h\", \"1d\"].map(interval =>\r\n        <span key={interval} className={\"w-full cursor-pointer \" + (interval === currentInterval ? \"font-bold\" : \"font-light\")} onClick={(() => setInt(interval))}>{interval}</span>  \r\n      )}\r\n      </div>\r\n      <div className=\"w-full h-full p-5\" id=\"chart-container\">\r\n        <div className=\"w-full h-full\" ref={chartRef} id=\"chart\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export function buildChartOptions(width: number, height: number) {\r\n  return ({\r\n    width, height,\r\n    rightPriceScale: { scaleMargins: { top: 0.3, bottom: 0.25, }, borderVisible: false },\r\n    layout: { backgroundColor: \"white\", textColor: \"#690F50\" },\r\n    grid: { vertLines: { color: \"rgba(42, 46, 57, 0)\" }, horzLines: { color: \"rgba(42, 46, 57, 0.1)\" } },\r\n    timeScale: { timeVisible: true, secondsVisible: false },\r\n  })\r\n}\r\n","import { ExchangePair } from \"../port/entities/exchange.port\";\r\nimport { OrderProps, OrderSide, OrderState } from \"../port/entities/order.port\";\r\n\r\n\r\nexport class Order {\r\n  constructor(private props: OrderProps) { }\r\n\r\n  get side(): OrderSide { return this.props.side }\r\n  get pair(): ExchangePair { return this.props.pair }\r\n  get quantity(): number { return this.props.quantity }\r\n  get price(): number { return this.props.price }\r\n  get state(): OrderState { return this.props.state }\r\n}","import { Order } from \"../../domain/entities/order\";\r\nimport { OrderProps } from \"../../domain/port/entities/order.port\";\r\nimport { Position } from \"../../domain/port/entities/position.port\";\r\n\r\nconst PositionMapper = {\r\n  toDomain(order: OrderProps) : Position {\r\n    return new Order({\r\n      side: order.side, \r\n      pair: order.pair, \r\n      quantity: order.quantity, \r\n      price: order.price, \r\n      state:  {\r\n        ...order.state,\r\n        openAt: new Date(order.state.openAt),\r\n        closeAt: new Date(order.state.closeAt)\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default  PositionMapper;","import React, { useRef, useState } from \"react\";\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useEffect } from \"react\";\r\nimport { Store } from \"../../../store\";\r\nimport PositionMapper from \"../../../mappers/position.mapper\";\r\n\r\nexport function Upload() {\r\n  const fileInput = useRef<any>()\r\n  const setPositions = Store.positions(state => state.set);\r\n  const handleChange = (e:any) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = (e: any) => {\r\n      const rawPositions = JSON.parse(e.target.result);\r\n      setPositions(rawPositions.map(PositionMapper.toDomain));\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex items-center\">\r\n      <button  className=\"p-3 bg-black-primary uppercase text-white text-sm rounded-md\" onClick={() => { fileInput.current.click() }}>Upload your positions</button>\r\n      <input type=\"file\" ref={fileInput} onChange={handleChange} className=\"hidden\" />\r\n      <a href=\"https://github.com/fabiensabatie/backtester-front/blob/main/positions.md\" target=\"_blank\" rel=\"noreferrer\">\r\n        <HelpOutlineIcon className=\"ml-4 text-base cursor-pointer\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport \"react-dates/initialize\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport moment, { Moment } from \"moment\";\r\n\r\ninterface Props {\r\n  updateStartDate: Function;\r\n  updateEndDate: Function;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nexport default function ResponsiveDateRangePicker(props: Props) {\r\n  const [focus, setFocus] = useState<\"startDate\" | \"endDate\" | null>(null);\r\n\r\n  return (\r\n    <div className={\"w-full flex justify-end box-border\"}>\r\n      <DateRangePicker\r\n        startDate={moment(props.startDate)} // momentPropTypes.momentObj or null,\r\n        startDateId=\"sDate\" // PropTypes.string.isRequired,\r\n        endDate={moment(props.endDate)} // momentPropTypes.momentObj or null,\r\n        endDateId=\"eDate\" // PropTypes.string.isRequired,\r\n        disabled={false}\r\n        startDateAriaLabel=\"Start date\"\r\n        endDateAriaLabel=\"End date\"\r\n        isOutsideRange={() => false}\r\n        noBorder={true}\r\n        onDatesChange={({ startDate, endDate }: { startDate: Moment | null, endDate : Moment | null}) => {\r\n          startDate && props.updateStartDate(startDate?.toDate());\r\n          endDate && props.updateEndDate(endDate?.toDate());\r\n        }} // PropTypes.func.isRequired,\r\n        focusedInput={focus} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n        onFocusChange={setFocus} // PropTypes.func.isRequired,\r\n        regular={true}\r\n      ></DateRangePicker>\r\n    </div>\r\n  );\r\n}\r\n","import { Position } from \"../../../../domain/port/entities/position.port\";\r\nimport moment from \"moment\";\r\n\r\ninterface Props {\r\n  positions: Position[]\r\n}\r\n\r\nexport const PositionList = ({ positions }: Props) => {\r\n\r\n  return (\r\n    <div className=\"w-full h-full\"  style={{maxHeight: 500}}>\r\n     <div className=\"text-white bg-black-primary w-full px-6 py-2 text-center flex justify-between\">\r\n        <span className=\"text-sm uppercase w-full\">Pair</span>\r\n        <span className=\"text-sm uppercase w-full\">Side</span>\r\n        <span className=\"text-sm uppercase w-full\">Opened at</span>\r\n        <span className=\"text-sm uppercase w-full\">Closed at</span>\r\n        <span className=\"text-sm uppercase w-full\">Fees</span>\r\n        <span className=\"text-sm uppercase w-full\">Price</span>\r\n        <span className=\"text-sm uppercase w-full\">Quantity</span>\r\n        <span className=\"text-sm uppercase w-full\">Profit</span>\r\n        <span className=\"text-sm uppercase w-full\">PNL (%)</span>\r\n      </div>\r\n      <div className=\"border-solid border-b-2 border-black-primary w-full\" style={{height: 1}}></div>\r\n      { positions.length ? \r\n        <div className=\"overflow-y-scroll items-around w-full flex flex-col h-full pb-10\" >\r\n        {positions.map((position, i) => (\r\n          <div className=\"text-primary w-full px-6 py-5 text-center text-base flex justify-between border-b border-solid border-black-input\" style={{minHeight: 50}}  key={i}>\r\n            <span className=\"w-full text-sm font-bold\">{position.pair}</span>\r\n            <span className={\"w-full text-sm uppercase font-bold \" + (position.side === \"ask\" ? \"text-green\" : \"text-red\")}>{position.side}</span>\r\n            <span className=\"w-full text-sm\">{moment(position.state.openAt).format(\"YYYY/mm/DD HH:MM:SS\")}</span>\r\n            <span className=\"w-full text-sm\">{moment(position.state.closeAt).format(\"YYYY/mm/DD HH:MM:SS\")}</span>\r\n            <span className={\"w-full font-bold text-sm\"}>{position.state.fee}</span>\r\n            <span className={\"w-full font-bold text-sm\"}>{position.price}</span>\r\n            <span className={\"w-full font-bold text-sm\"}>{position.quantity}</span>\r\n            <span className={\"w-full font-bold text-sm \" + (position.state.profit > 0 ? \"text-green\" : \"text-red\")}>{position.state.profit}</span>\r\n            <span className={\"w-full font-bold text-sm \" + (position.state.profit > 0 ? \"text-green\" : \"text-red\")}>{parseFloat(`${100 - (position.price - position.state.profit) / position.price * 100}`).toFixed(2) }%</span>\r\n          </div>\r\n        ))}\r\n        </div> : <div className=\"w-full m-4\">Import your backtesting positions to see your results</div>\r\n        }\r\n    </div>\r\n  );\r\n};","import { Position } from \"../../../../domain/port/entities/position.port\";\r\nimport Countup from \"react-countup\";\r\n\r\ninterface Props {\r\n  positions: Position[]\r\n}\r\n\r\nexport const PositionResults = ({ positions }: Props) => {\r\n\r\n  const profit = positions.reduce((sum, order) =>  sum + order.state.profit, 0);\r\n  const fee = positions.reduce((sum, order) =>  sum + order.state.fee, 0);\r\n  const pnl = positions.reduce((sum, order) => (100 - (order.price - order.state.profit) / order.price * 100) + sum, 0) / positions.length;\r\n\r\n  return (<div  className=\"w-full h-full\">\r\n    <div className=\"w-full p-3 bg-black-primary text-white text-sm uppercase\">Backtest results</div>\r\n    <div className=\"p-3 py-5\">\r\n      <div className=\"flex w-full\">\r\n        { positions.length ? <div className=\"w-full flex flex-col\">\r\n          <div className=\"w-full justify-between flex items-center\"><span className=\"font-bold text-s uppercase\">Total profit :</span><Countup end={profit} duration={2}></Countup></div>\r\n          <div className=\"w-full justify-between flex items-center\"><span className=\"font-bold text-s uppercase\">Cumulative fees :</span><Countup end={fee} duration={2}></Countup></div>\r\n          <div className={\"w-full justify-between flex items-center\"}>\r\n            <span className=\"font-bold text-s uppercase\">Total return :</span>\r\n            <span className={\"font-bold \" + (pnl > 0 ? \"text-green\" : \"text-red\")}>{pnl.toFixed(2)}%</span>\r\n          </div>\r\n        </div> : <span className=\"w-full\">Import your backtesting positions to see your results</span>\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};","import { TextField } from \"@material-ui/core\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import MockCandleData from \"../../../adapters/repositories/mock-data/candles.json\";\r\nimport MockOrderData from \"../../../adapters/repositories/mock-data/orders.json\";\r\n// import { Candle } from \"../../../domain/entities/candle\";\r\nimport { ExchangePair, ExchangePairList } from \"../../../domain/port/entities/exchange.port\";\r\nimport { Position } from \"../../../domain/port/entities/position.port\";\r\nimport { Store } from \"../../store\";\r\nimport { CandleChart } from \"../components/charts/candle-chart\";\r\nimport { Upload } from \"../components/commons/json-reader.component\";\r\nimport ResponsiveDateRangePicker from \"../components/commons/date-picker.component\";\r\nimport { PositionList } from \"../components/positions/list\";\r\nimport { PositionResults } from \"../components/positions/results\";\r\n\r\n// const orders:Position[] = JSON.parse(JSON.stringify(MockOrderData)).map((order:any) => ({...order, state : { ...order.state, openAt : new Date(order.state.openAt), closeAt: new Date(order.state.closeAt)}}))\r\n// const mockCandles:Candle[] = JSON.parse(JSON.stringify(MockCandleData)).map((candle:any) => ({...candle, openAt : new Date(candle.openAt), closeAt: new Date(candle.closeAt)}))\r\n\r\nexport const ChartPage: React.FunctionComponent = () => {\r\n  const [startDate, setStartDate] = useState<Date>(new Date('2021-04-02'));\r\n  const [endDate, setEndDate] = useState<Date>(new Date('2021-04-20'));\r\n  const [pair, setPair] = useState<ExchangePair>(\"ETHUSDT\");\r\n  const [inputPairValue, setInputPairValue] = useState<ExchangePair>(pair);\r\n  const setCandles = Store.candles(state => state.set);\r\n  const candles = Store.candles(state => state.candles);\r\n  const orders = Store.positions(state => state.positions);\r\n  const loading = Store.candles(state => state.loading);\r\n  \r\n  const getCandles:Function = () => setCandles(startDate, endDate, pair);\r\n\r\n  useEffect(() =>  getCandles(), [])\r\n\r\n  return (\r\n    <div className=\"w-full h-full  flex flex-col\">\r\n      {loading ? <div className=\"relative top-0 bottom-0 l-0 r-0 m-auto\" style={{width: 150, height: 150}}>\r\n        <img src=\"/images/loader.gif\" alt=\"loader\"></img>\r\n        </div> : \"\"}\r\n      { !loading && \r\n        <div className=\"h-full w-full flex flex-col justify-between\">\r\n          <div className=\"w-full flex justify-between p-10\">\r\n            <Upload />\r\n            <div className=\"w-full flex\">\r\n              <Autocomplete\r\n                value={pair} onChange={(event, value:string | null) => { setPair(value as ExchangePair || pair); }}\r\n                inputValue={inputPairValue} onInputChange={(event, value:string) => { setInputPairValue(value as ExchangePair || \"\"); }}\r\n                id=\"pair-selector\" options={ExchangePairList} style={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Pair\" variant=\"outlined\" />}\r\n              />\r\n              <ResponsiveDateRangePicker updateStartDate={setStartDate} updateEndDate={setEndDate} startDate={startDate} endDate={endDate} />\r\n              <RefreshIcon className=\"mt-3 cursor-pointer\" onClick={() => getCandles()}></RefreshIcon>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex h-3/6 pb-0\">\r\n            <div className=\"w-4/6  pl-10\">\r\n              <div className=\"w-full h-full rounded-huge shadow-videocard overflow-hidden\">\r\n                <div className=\"w-full h-full\">\r\n                <CandleChart positions={orders} indicators={[]} candles={candles}></CandleChart>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-2/6 px-10\">\r\n              <div className=\"w-full h-full rounded-huge shadow-videocard overflow-hidden\">\r\n                <PositionResults positions={orders}></PositionResults>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full h-2/6 p-10\">\r\n            <div className=\"w-full h-full rounded-huge shadow-videocard overflow-hidden\">\r\n              <div className=\"w-full h-full\">\r\n                <PositionList positions={orders}></PositionList>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { ChartPage } from \"./adapters/views/pages/chart.page\";\nimport \"./App.css\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ChartPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}